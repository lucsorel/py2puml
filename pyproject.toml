[tool.poetry]
name = "py2puml"
version = "0.7.2"
description = "Generate PlantUML class diagrams to document your Python application."
keywords = ["class diagram", "PlantUML", "documentation", "inspection", "AST"]
readme = "README.md"
repository = "https://github.com/lucsorel/py2puml"
authors = ["Luc Sorel-Giffo"]
maintainers = ["Luc Sorel-Giffo"]
license = "MIT"
include = [
    "CONTRIBUTING.md"
]

[tool.poetry.scripts]
py2puml = 'py2puml.cli:run'

[tool.poetry.dependencies]
python = "^3.8"

[tool.poetry.group.dev.dependencies]
pylint = "^2.16.1"
pytest = "^7.2.1"
pytest-cov = "^4.0.0"

[tool.pytest.ini_options]
minversion = "6.2"
testpaths = ["tests"]
console_output_style = "count"

[tool.pylint.messages_control]
disable = [
  # makes docstring optional
  "missing-docstring",
  # superfluous parentheses often helps reading the code
  "superfluous-parens",
  # iterative coding always involve TODO and FIXME
  "fixme",
  # cli and web APIs involve except clauses with generic exception for logging and error management purposes
  "broad-except",
  # used to define the RAM allowed in a child process searching for matching samples
  "subprocess-popen-preexec-fn",
  # line length management is delegated to yapf
  "line-too-long"
]

[build-system]
requires = ["poetry>=0.12"]
build-backend = "poetry.masonry.api"
